// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/25/2020 16:42:31"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          TASK7
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TASK7_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK;
// wires                                               
wire [15:0] ACC_IN;
wire [15:0] ACC_OUT;
wire [11:0] ADDRESS;
wire [15:0] DATAOUT;
wire EXEC1;
wire EXEC2;
wire FETCH;
wire [11:0] IR_PRIME;
wire PC_CNT_EN;
wire [11:0] PC_OUT;
wire SLOAD;

// assign statements (if any)                          
TASK7 i1 (
// port map - connection between master ports and signals/registers   
	.ACC_IN(ACC_IN),
	.ACC_OUT(ACC_OUT),
	.ADDRESS(ADDRESS),
	.CLOCK(CLOCK),
	.DATAOUT(DATAOUT),
	.EXEC1(EXEC1),
	.EXEC2(EXEC2),
	.FETCH(FETCH),
	.IR_PRIME(IR_PRIME),
	.PC_CNT_EN(PC_CNT_EN),
	.PC_OUT(PC_OUT),
	.SLOAD(SLOAD)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK
always
begin
	CLOCK = 1'b0;
	CLOCK = #5000 1'b1;
	#5000;
end 
endmodule

