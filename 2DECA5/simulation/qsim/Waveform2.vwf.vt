// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/13/2020 16:12:43"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MU0CPU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MU0CPU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
// wires                                               
wire [11:0] ADDRESS;
wire CARRYFF;
wire EXEC1;
wire EXEC2;
wire FETCH;
wire [11:0] PC_OUT;
wire [15:0] R1Q;
wire [15:0] R2Q;
wire [15:0] R3Q;
wire [15:0] RAM_IN;
wire [15:0] RAM_OUT;
wire SKIPFF;

// assign statements (if any)                          
MU0CPU i1 (
// port map - connection between master ports and signals/registers   
	.ADDRESS(ADDRESS),
	.CARRYFF(CARRYFF),
	.CLK(CLK),
	.EXEC1(EXEC1),
	.EXEC2(EXEC2),
	.FETCH(FETCH),
	.PC_OUT(PC_OUT),
	.R1Q(R1Q),
	.R2Q(R2Q),
	.R3Q(R3Q),
	.RAM_IN(RAM_IN),
	.RAM_OUT(RAM_OUT),
	.SKIPFF(SKIPFF)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	CLK = 1'b1;
	# 10000;
	repeat(49)
	begin
		CLK = 1'b0;
		CLK = #10000 1'b1;
		# 10000;
	end
	CLK = 1'b0;
end 
endmodule

